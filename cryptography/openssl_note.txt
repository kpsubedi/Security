$openssl x509 -pubkey < tls.crt | openssl pky -pubin -outfrom der | openssl dgst -sha256 -binary | openssl base64

bash-4.2$ openssl x509 -pubkey < test.crt | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | openssl base64
lJFY2T3+FEzF1G3HpkjNAZPhjiHQT9f5mDuG6h+hSG8=


Using csr to generate pin
$openssl req -pubkey < demo.csr | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | openssl base64

bash-4.2$ openssl req -pubkey < MYCSR.csr | openssl pkey -pubin -outform der | openssl dgst -sha256 -binary | openssl base64
vNHHK4eySa+w+R9O6T3fx78AKdVheRaAqKQfa1RdXs0=
bash-4.2$ 

PUBLIC KEY INFRASTRUCTRE (PKI)
==============================

PKI Usage for Encryption
========================


PKI Usage for Signing and Verifying 
===================================

1. Create / Select a message 
2. Generate private and public RSA keys
3. Generate signature using private key
4. Verifying signature using public key

Example

1. touch sample.txt
2. echo "Sample Message" > sample.txt

3. openssl genrsa -aes128 -passout pass:SamplePass123456 -out private.pem 4096
4. openssl rsa -in private.pem -passin pass:SamplePass123456 -pubout -out public.pem 

5. openssl dgst -sha256 -sign private.pem -out sign.sha256 sample.txt
6. openssl dgst -sha256 -verify public.pem -signature sign.sha256 sample.txt



Helpful Section
===============

└─$ openssl list -help        
Usage: list [options]

General options:
 -help                     Display this summary

Output options:
 -1                        List in one column
 -verbose                  Verbose listing
 -select val               Select a single algorithm
 -commands                 List of standard commands
 -standard-commands        List of standard commands
 -digest-commands          List of message digest commands (deprecated)
 -digest-algorithms        List of message digest algorithms
 -kdf-algorithms           List of key derivation and pseudo random function algorithms
 -random-instances         List the primary, public and private random number generator details
 -random-generators        List of random number generators
 -mac-algorithms           List of message authentication code algorithms
 -cipher-commands          List of cipher commands (deprecated)
 -cipher-algorithms        List of cipher algorithms
 -encoders                 List of encoding methods
 -decoders                 List of decoding methods
...
...
...


openssl list -standard-commands
openssl list -digest-commands
openssl list -cipher-commands


openssl list -cipher-algorithms
openssl list -digest-algorithms
openssl list -public-key-algorithms
openssl list -mac-algorithms


└─$ openssl list -standard-commands               
asn1parse         ca                ciphers           cmp               
cms               crl               crl2pkcs7         dgst              
dhparam           dsa               dsaparam          ec                
ecparam           enc               engine            errstr            
fipsinstall       gendsa            genpkey           genrsa            
help              info              kdf               list              
mac               nseq              ocsp              passwd            
pkcs12            pkcs7             pkcs8             pkey              
pkeyparam         pkeyutl           prime             rand              
rehash            req               rsa               rsautl            
s_client          s_server          s_time            sess_id           
smime             speed             spkac             srp               
storeutl          ts                verify            version           
x509 

└─$ openssl list -digest-commands  
blake2b512        blake2s256        md4               md5               
rmd160            sha1              sha224            sha256            
sha3-224          sha3-256          sha3-384          sha3-512          
sha384            sha512            sha512-224        sha512-256        
shake128          shake256          sm3 


└─$ openssl list -cipher-commands
aes-128-cbc       aes-128-ecb       aes-192-cbc       aes-192-ecb       
aes-256-cbc       aes-256-ecb       aria-128-cbc      aria-128-cfb      
aria-128-cfb1     aria-128-cfb8     aria-128-ctr      aria-128-ecb      
aria-128-ofb      aria-192-cbc      aria-192-cfb      aria-192-cfb1     
aria-192-cfb8     aria-192-ctr      aria-192-ecb      aria-192-ofb      
aria-256-cbc      aria-256-cfb      aria-256-cfb1     aria-256-cfb8     
aria-256-ctr      aria-256-ecb      aria-256-ofb      bf                
bf-cbc            bf-cfb            bf-ecb            bf-ofb            
camellia-128-cbc  camellia-128-ecb  camellia-192-cbc  camellia-192-ecb  
camellia-256-cbc  camellia-256-ecb  cast              cast-cbc          
cast5-cbc         cast5-cfb         cast5-ecb         cast5-ofb         
des               des-cbc           des-cfb           des-ecb           
des-ede           des-ede-cbc       des-ede-cfb       des-ede-ofb       
des-ede3          des-ede3-cbc      des-ede3-cfb      des-ede3-ofb      
des-ofb           des3              desx              rc2               
rc2-40-cbc        rc2-64-cbc        rc2-cbc           rc2-cfb           
rc2-ecb           rc2-ofb           rc4               rc4-40            
seed              seed-cbc          seed-cfb          seed-ecb          
seed-ofb          sm4-cbc           sm4-cfb           sm4-ctr           
sm4-ecb           sm4-ofb   


└─$ openssl list -mac-algorithms
Provided MACs:
  { 1.3.6.1.4.1.1722.12.2.1, BLAKE2BMAC } @ default
  { 1.3.6.1.4.1.1722.12.2.2, BLAKE2SMAC } @ default
  CMAC @ default
  { 1.0.9797.3.4, GMAC } @ default
  HMAC @ default
  { 2.16.840.1.101.3.4.2.19, KMAC-128, KMAC128 } @ default
  { 2.16.840.1.101.3.4.2.20, KMAC-256, KMAC256 } @ default
  SIPHASH @ default
  POLY1305 @ default


Verify /etc/shadow hash
-----------------------
#openssl passwd --help 

Usage: passwd [options] [password]

General options:
 -help               Display this summary

Input options:
 -in infile          Read passwords from file
 -noverify           Never verify when reading password from terminal
 -stdin              Read passwords from stdin

Output options:
 -quiet              No warnings
 -table              Format output as table
 -reverse            Switch table columns

Cryptographic options:
 -salt val           Use provided salt
 -6                  SHA512-based password algorithm
 -5                  SHA256-based password algorithm
 -apr1               MD5-based password algorithm, Apache variant
 -1                  MD5-based password algorithm
 -aixmd5             AIX MD5-based password algorithm

Random state options:
 -rand val           Load the given file(s) into the random number generator
 -writerand outfile  Write random data to the specified file

Provider options:
 -provider-path val  Provider load path (must be before 'provider' argument if required)
 -provider val       Provider to load (can be specified multiple times)
 -propquery val      Property query used when fetching algorithms

Parameters:
 password            Password text to digest (optional)


#cat /etc/shadow 
#openssl passwd -6 -salt <SALT_FROM_SHADOW>


